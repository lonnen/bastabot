{
  "name": "brain",
  "description": "neural network and classifier library",
  "version": "0.3.4",
  "author": {
    "name": "Heather Arthur",
    "email": "fayearthur@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/harthur/brain.git"
  },
  "dependencies": {
    "underscore": ">=1.1.0",
    "redis": ">=0.6.0"
  },
  "devDependencies": {
    "nomnom": ">=0.4.3",
    "cradle": ">=0.2.5",
    "connect": ">=1.4.0",
    "uglify-js": ">=1.0.1",
    "colors": ">=0.5.0"
  },
  "main": "./lib/brain",
  "readme": "# brain\n\nbrain is a limited JavaScript supervised machine learning library. [Full API here](http://harthur.github.com/brain). Neural network example:\n\n\tvar net = new brain.NeuralNetwork();\n\tnet.train([{input: [0, 0], output: [0]},\n\t           {input: [0, 1], output: [1]},\n\t           {input: [1, 0], output: [1]},\n\t           {input: [1, 1], output: [0]}]);\n\t\n\tvar output = net.run([1, 0]);\n\nThe output will be `[0.987]` or something close like that. There's no reason to use a neural network to figure out XOR, but it's a small example (-:\n\nNaive Bayesian classifier example:\n\n\tvar bayes = new brain.BayesianClassifier();\n\t\n\tbayes.train(\"cheap replica watches\", \"spam\");\n\tbayes.train(\"I don't know if this works on Windows\", \"not\");\n\t\n\tvar category = bayes.classify(\"free watches\");\n\n\n# using as a commonJS package\nIf you have [node](http://nodejs.org/) and [npm](http://github.com/isaacs/npm) you can:\n\n\tnpm install brain\n\nthen:\n\n\tvar brain = require(\"brain\");\n\tvar net = new brain.NeuralNetwork();\n\n# using in the browser\nDownload the latest [brain.js](http://github.com/harthur/brain/downloads). If you're using `BayesianClassifier`, you can only use the `localStorage` and (default) in-memory backends, and you'll need to grab [underscore.js](http://documentcloud.github.com/underscore/). If you're using the `NeuralNetwork` you should try to train the network offline (or on a Worker) and use the `toFunction()` or `toJSON()` options to plug the pre-trained network in to your website.\n\n\n# tests\nRunning the tests requires checking out the code and installing the dev dependencies: `npm install brain --dev`. To run the suite of tests:\n\n\tnode test/runtests.js\n\t\nTo run the other tests: [browser and cross-validation tests](https://github.com/harthur/brain/tree/master/test)\n\n# build\nTo build a browser file from the CommonJS package you'll need [node-jake](https://github.com/mde/node-jake), then:\n\n\tjake build\n\tjake minify\n",
  "readmeFilename": "README.md",
  "_id": "brain@0.3.4",
  "_from": "brain@==0.3.4"
}
